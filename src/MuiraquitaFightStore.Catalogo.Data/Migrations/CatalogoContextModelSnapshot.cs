// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MuiraquitaFightStore.Catalogo.Data;

#nullable disable

namespace MuiraquitaFightStore.Catalogo.Data.Migrations
{
    [DbContext(typeof(CatalogoContext))]
    partial class CatalogoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MuiraquitaFightStore.Catalogo.Domain.Entitys.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("MuiraquitaFightStore.Catalogo.Domain.Entitys.Marca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Marcas", (string)null);
                });

            modelBuilder.Entity("MuiraquitaFightStore.Catalogo.Domain.Entitys.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("MarcaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("MuiraquitaFightStore.Catalogo.Domain.Entitys.Produto", b =>
                {
                    b.HasOne("MuiraquitaFightStore.Catalogo.Domain.Entitys.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MuiraquitaFightStore.Catalogo.Domain.Entitys.Marca", "Marca")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("MuiraquitaFightStore.Catalogo.Domain.Entitys.Produto.Tamanho#MuiraquitaFightStore.Catalogo.Domain.Entitys.ValueObject.Tamanho", "Tamanho", b1 =>
                        {
                            b1.Property<Guid>("ProdutoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Peso")
                                .HasColumnType("Varchar(3)")
                                .HasColumnName("Peso");

                            b1.Property<string>("TamanhoCamisa")
                                .HasColumnType("Varchar(100)")
                                .HasColumnName("TamanhoCamisa");

                            b1.Property<string>("TamanhoNumeracao")
                                .HasColumnType("Varchar(100)")
                                .HasColumnName("TamanhoNumeracao");

                            b1.Property<string>("TamanhoShort")
                                .HasColumnType("Varchar(100)")
                                .HasColumnName("TamanhoShort");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produtos", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("Tamanho");
                });

            modelBuilder.Entity("MuiraquitaFightStore.Catalogo.Domain.Entitys.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("MuiraquitaFightStore.Catalogo.Domain.Entitys.Marca", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
